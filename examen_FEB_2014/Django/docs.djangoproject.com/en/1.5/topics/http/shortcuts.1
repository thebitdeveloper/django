<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta http-equiv="Content-Language" content="en-us" />
    <title>Django shortcut functions | Django documentation | Django</title>
    <meta name="ROBOTS" content="ALL" />
    <meta http-equiv="imagetoolbar" content="no" />
    <meta name="MSSmartTagsPreventParsing" content="true" />
    <meta name="Copyright" content="Django Software Foundation" />
    <meta name="keywords" content="Python, Django, framework, open-source" />
    <meta name="description" content="Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design." />
    
    <link href="../../../../s/css/base.383e0bb3119d.css" rel="stylesheet" type="text/css" media="screen" />
    
    <link href="../../../../s/css/print.ac134bbb8dfc.css" rel="stylesheet" type="text/css" media="print" />
    
  
  <link rel="stylesheet" href="../../../../s/css/docs/docs.feec2ab82630.css" type="text/css" />
  <link rel="stylesheet" href="../../../../s/css/pygments.0d57d48be058.css" type="text/css" />

  </head>
  <body id="documentation" class="default">
  <div id="container">
    <div id="header">
      <h1 id="logo"><a href="https://www.djangoproject.com/"><img src="../../../../s/img/site/hdr_logo.b19c5e60269d.gif" alt="Django" /></a></h1>
      <ul id="nav-global">
        <li id="nav-homepage"><a href="https://www.djangoproject.com/">Home</a></li>
        <li id="nav-download"><a href="https://www.djangoproject.com/download/">Download</a></li>
        <li id="nav-documentation"><a href="../../../../index.html">Documentation</a></li>
        <li id="nav-weblog"><a href="https://www.djangoproject.com/weblog/">Weblog</a></li>
        <li id="nav-community"><a href="https://www.djangoproject.com/community/">Community</a></li>
        <li id="nav-code"><a href="https://code.djangoproject.com/">Code</a></li>
      </ul>
    </div>
    <!-- END Header -->
    <div id="billboard">
  <h2><a href="../../../../index.html">Django documentation</a></h2>
</div>
    <div id="columnwrap">
      
		<div id="content-main">
		


  
  
  <ul id="doc-versions">
      
        
          <li class="other">
          
            <a href="../../../1.0/topics/http/shortcuts/index.html">1.0</a>
          
          </li>
        
      
        
          <li class="other">
          
            <a href="../../../1.1/topics/http/shortcuts.1">1.1</a>
          
          </li>
        
      
        
          <li class="other">
          
            <a href="../../../1.2/topics/http/shortcuts.1">1.2</a>
          
          </li>
        
      
        
          <li class="other">
          
            <a href="../../../1.3/topics/http/shortcuts.1">1.3</a>
          
          </li>
        
      
        
          <li class="other">
          
            <a href="../../../1.4/topics/http/shortcuts.1">1.4</a>
          
          </li>
        
      
        
      
        
          <li class="other">
          
            <a href="../../../1.6/topics/http/shortcuts.1">1.6</a>
          
          </li>
        
      
        
          <li class="other">
          
            <a href="../../../dev/topics/http/shortcuts.1">dev</a>
          
          </li>
        
      
      <li class="current"
          title="This document describes Django 1.5. Click on the links on the left to see other versions.">
        <span>Documentation version:
          <strong>1.5
          </strong>
        </span>
      </li>
  </ul>
  <div class="section" id="s-module-django.shortcuts">
<span id="s-django-shortcut-functions"></span><span id="module-django.shortcuts"></span><span id="django-shortcut-functions"></span><h1>Django shortcut functions<a class="headerlink" href="shortcuts.1#module-django.shortcuts" title="Permalink to this headline">¶</a></h1>
<p id="index-0">The package <tt class="docutils literal"><span class="pre">django.shortcuts</span></tt> collects helper functions and classes that
&#8220;span&#8221; multiple levels of MVC. In other words, these functions/classes
introduce controlled coupling for convenience&#8217;s sake.</p>
<div class="section" id="s-render">
<span id="render"></span><h2><tt class="docutils literal"><span class="pre">render</span></tt><a class="headerlink" href="shortcuts.1#render" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.render">
<tt class="descname">render</tt>(<em>request, template_name[, dictionary][, context_instance][, content_type][, status][, current_app]</em>)<a class="headerlink" href="shortcuts.1#django.shortcuts.render" title="Permalink to this definition">¶</a></dt>
<dd><p>Combines a given template with a given context dictionary and returns an
<a class="reference internal" href="../../ref/request-response.1#django.http.HttpResponse" title="django.http.HttpResponse"><tt class="xref py py-class docutils literal"><span class="pre">HttpResponse</span></tt></a> object with that rendered text.</p>
<p><a class="reference internal" href="shortcuts.1#django.shortcuts.render" title="django.shortcuts.render"><tt class="xref py py-func docutils literal"><span class="pre">render()</span></tt></a> is the same as a call to
<a class="reference internal" href="shortcuts.1#django.shortcuts.render_to_response" title="django.shortcuts.render_to_response"><tt class="xref py py-func docutils literal"><span class="pre">render_to_response()</span></tt></a> with a <cite>context_instance</cite> argument that
forces the use of a <a class="reference internal" href="../../ref/templates/api.1#django.template.RequestContext" title="django.template.RequestContext"><tt class="xref py py-class docutils literal"><span class="pre">RequestContext</span></tt></a>.</p>
</dd></dl>

<div class="section" id="s-required-arguments">
<span id="required-arguments"></span><h3>Required arguments<a class="headerlink" href="shortcuts.1#required-arguments" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">request</span></tt></dt>
<dd>The request object used to generate this response.</dd>
<dt><tt class="docutils literal"><span class="pre">template_name</span></tt></dt>
<dd>The full name of a template to use or sequence of template names.</dd>
</dl>
</div>
<div class="section" id="s-optional-arguments">
<span id="optional-arguments"></span><h3>Optional arguments<a class="headerlink" href="shortcuts.1#optional-arguments" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">dictionary</span></tt></dt>
<dd>A dictionary of values to add to the template context. By default, this
is an empty dictionary. If a value in the dictionary is callable, the
view will call it just before rendering the template.</dd>
<dt><tt class="docutils literal"><span class="pre">context_instance</span></tt></dt>
<dd>The context instance to render the template with. By default, the template
will be rendered with a <tt class="docutils literal"><span class="pre">RequestContext</span></tt> instance (filled with values from
<tt class="docutils literal"><span class="pre">request</span></tt> and <tt class="docutils literal"><span class="pre">dictionary</span></tt>).</dd>
<dt><tt class="docutils literal"><span class="pre">content_type</span></tt></dt>
<dd>The MIME type to use for the resulting document. Defaults to the value of
the <a class="reference internal" href="../../ref/settings/index.html#std:setting-DEFAULT_CONTENT_TYPE"><tt class="xref std std-setting docutils literal"><span class="pre">DEFAULT_CONTENT_TYPE</span></tt></a> setting.</dd>
<dt><tt class="docutils literal"><span class="pre">status</span></tt></dt>
<dd>The status code for the response. Defaults to <tt class="docutils literal"><span class="pre">200</span></tt>.</dd>
<dt><tt class="docutils literal"><span class="pre">current_app</span></tt></dt>
<dd>A hint indicating which application contains the current view. See the
<a class="reference internal" href="urls/index.html#topics-http-reversing-url-namespaces"><em>namespaced URL resolution strategy</em></a>
for more information.</dd>
</dl>
</div>
<div class="section" id="s-example">
<span id="example"></span><h3>Example<a class="headerlink" href="shortcuts.1#example" title="Permalink to this headline">¶</a></h3>
<p>The following example renders the template <tt class="docutils literal"><span class="pre">myapp/index.html</span></tt> with the
MIME type <em class="mimetype">application/xhtml+xml</em>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="c"># View code here...</span>
    <span class="k">return</span> <span class="n">render</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="s">&#39;myapp/index.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&quot;foo&quot;</span><span class="p">:</span> <span class="s">&quot;bar&quot;</span><span class="p">},</span>
        <span class="n">content_type</span><span class="o">=</span><span class="s">&quot;application/xhtml+xml&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>This example is equivalent to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>
<span class="kn">from</span> <span class="nn">django.template</span> <span class="kn">import</span> <span class="n">RequestContext</span><span class="p">,</span> <span class="n">loader</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="c"># View code here...</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="n">get_template</span><span class="p">(</span><span class="s">&#39;myapp/template.html&#39;</span><span class="p">)</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">RequestContext</span><span class="p">(</span><span class="n">request</span><span class="p">,</span> <span class="p">{</span><span class="s">&#39;foo&#39;</span><span class="p">:</span> <span class="s">&#39;bar&#39;</span><span class="p">})</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="n">c</span><span class="p">),</span>
        <span class="n">content_type</span><span class="o">=</span><span class="s">&quot;application/xhtml+xml&quot;</span><span class="p">)</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="s-render-to-response">
<span id="render-to-response"></span><h2><tt class="docutils literal"><span class="pre">render_to_response</span></tt><a class="headerlink" href="shortcuts.1#render-to-response" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.render_to_response">
<tt class="descname">render_to_response</tt>(<em>template_name[, dictionary][, context_instance][, content_type]</em>)<a class="headerlink" href="shortcuts.1#django.shortcuts.render_to_response" title="Permalink to this definition">¶</a></dt>
<dd><p>Renders a given template with a given context dictionary and returns an
<a class="reference internal" href="../../ref/request-response.1#django.http.HttpResponse" title="django.http.HttpResponse"><tt class="xref py py-class docutils literal"><span class="pre">HttpResponse</span></tt></a> object with that rendered text.</p>
</dd></dl>

<div class="section" id="s-id1">
<span id="id1"></span><h3>Required arguments<a class="headerlink" href="shortcuts.1#id1" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">template_name</span></tt></dt>
<dd>The full name of a template to use or sequence of template names. If a
sequence is given, the first template that exists will be used. See the
<a class="reference internal" href="../../ref/templates/api.1#ref-templates-api-the-python-api"><em>template loader documentation</em></a>
for more information on how templates are found.</dd>
</dl>
</div>
<div class="section" id="s-id2">
<span id="id2"></span><h3>Optional arguments<a class="headerlink" href="shortcuts.1#id2" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">dictionary</span></tt></dt>
<dd>A dictionary of values to add to the template context. By default, this
is an empty dictionary. If a value in the dictionary is callable, the
view will call it just before rendering the template.</dd>
<dt><tt class="docutils literal"><span class="pre">context_instance</span></tt></dt>
<dd><p class="first">The context instance to render the template with. By default, the template
will be rendered with a <a class="reference internal" href="../../ref/templates/api.1#django.template.Context" title="django.template.Context"><tt class="xref py py-class docutils literal"><span class="pre">Context</span></tt></a> instance (filled
with values from <tt class="docutils literal"><span class="pre">dictionary</span></tt>). If you need to use <a class="reference internal" href="../../ref/templates/api.1#subclassing-context-requestcontext"><em>context
processors</em></a>, render the template with
a <a class="reference internal" href="../../ref/templates/api.1#django.template.RequestContext" title="django.template.RequestContext"><tt class="xref py py-class docutils literal"><span class="pre">RequestContext</span></tt></a> instance instead. Your code
might look something like this:</p>
<div class="last highlight-python"><div class="highlight"><pre><span class="k">return</span> <span class="n">render_to_response</span><span class="p">(</span><span class="s">&#39;my_template.html&#39;</span><span class="p">,</span>
                          <span class="n">my_data_dictionary</span><span class="p">,</span>
                          <span class="n">context_instance</span><span class="o">=</span><span class="n">RequestContext</span><span class="p">(</span><span class="n">request</span><span class="p">))</span>
</pre></div>
</div>
</dd>
<dt><tt class="docutils literal"><span class="pre">content_type</span></tt></dt>
<dd>The MIME type to use for the resulting document. Defaults to the value of
the <a class="reference internal" href="../../ref/settings/index.html#std:setting-DEFAULT_CONTENT_TYPE"><tt class="xref std std-setting docutils literal"><span class="pre">DEFAULT_CONTENT_TYPE</span></tt></a> setting.</dd>
</dl>
</div>
<div class="section" id="s-id3">
<span id="id3"></span><h3>Example<a class="headerlink" href="shortcuts.1#id3" title="Permalink to this headline">¶</a></h3>
<p>The following example renders the template <tt class="docutils literal"><span class="pre">myapp/index.html</span></tt> with the
MIME type <em class="mimetype">application/xhtml+xml</em>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">render_to_response</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="c"># View code here...</span>
    <span class="k">return</span> <span class="n">render_to_response</span><span class="p">(</span><span class="s">&#39;myapp/index.html&#39;</span><span class="p">,</span> <span class="p">{</span><span class="s">&quot;foo&quot;</span><span class="p">:</span> <span class="s">&quot;bar&quot;</span><span class="p">},</span>
        <span class="n">mimetype</span><span class="o">=</span><span class="s">&quot;application/xhtml+xml&quot;</span><span class="p">)</span>
</pre></div>
</div>
<p>This example is equivalent to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">HttpResponse</span>
<span class="kn">from</span> <span class="nn">django.template</span> <span class="kn">import</span> <span class="n">Context</span><span class="p">,</span> <span class="n">loader</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="c"># View code here...</span>
    <span class="n">t</span> <span class="o">=</span> <span class="n">loader</span><span class="o">.</span><span class="n">get_template</span><span class="p">(</span><span class="s">&#39;myapp/template.html&#39;</span><span class="p">)</span>
    <span class="n">c</span> <span class="o">=</span> <span class="n">Context</span><span class="p">({</span><span class="s">&#39;foo&#39;</span><span class="p">:</span> <span class="s">&#39;bar&#39;</span><span class="p">})</span>
    <span class="k">return</span> <span class="n">HttpResponse</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">render</span><span class="p">(</span><span class="n">c</span><span class="p">),</span>
        <span class="n">content_type</span><span class="o">=</span><span class="s">&quot;application/xhtml+xml&quot;</span><span class="p">)</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="s-redirect">
<span id="redirect"></span><h2><tt class="docutils literal"><span class="pre">redirect</span></tt><a class="headerlink" href="shortcuts.1#redirect" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.redirect">
<tt class="descname">redirect</tt>(<em>to</em><span class="optional">[</span>, <em>permanent=False</em><span class="optional">]</span>, <em>*args</em>, <em>**kwargs</em>)<a class="headerlink" href="shortcuts.1#django.shortcuts.redirect" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns an <a class="reference internal" href="../../ref/request-response.1#django.http.HttpResponseRedirect" title="django.http.HttpResponseRedirect"><tt class="xref py py-class docutils literal"><span class="pre">HttpResponseRedirect</span></tt></a> to the appropriate URL
for the arguments passed.</p>
<p>The arguments could be:</p>
<ul class="simple">
<li>A model: the model&#8217;s <a class="reference internal" href="../../ref/models/instances/index.html#django.db.models.Model.get_absolute_url" title="django.db.models.Model.get_absolute_url"><tt class="xref py py-meth docutils literal"><span class="pre">get_absolute_url()</span></tt></a>
function will be called.</li>
<li>A view name, possibly with arguments: <a class="reference internal" href="../../ref/urlresolvers.1#django.core.urlresolvers.reverse" title="django.core.urlresolvers.reverse"><tt class="xref py py-func docutils literal"><span class="pre">urlresolvers.reverse</span></tt></a> will be used to reverse-resolve the
name.</li>
<li>A URL, which will be used as-is for the redirect location.</li>
</ul>
<p>By default issues a temporary redirect; pass <tt class="docutils literal"><span class="pre">permanent=True</span></tt> to issue a
permanent redirect</p>
</dd></dl>

<div class="section" id="s-examples">
<span id="examples"></span><h3>Examples<a class="headerlink" href="shortcuts.1#examples" title="Permalink to this headline">¶</a></h3>
<p>You can use the <a class="reference internal" href="shortcuts.1#django.shortcuts.redirect" title="django.shortcuts.redirect"><tt class="xref py py-func docutils literal"><span class="pre">redirect()</span></tt></a> function in a number of ways.</p>
<ol class="arabic">
<li><p class="first">By passing some object; that object&#8217;s
<a class="reference internal" href="../../ref/models/instances/index.html#django.db.models.Model.get_absolute_url" title="django.db.models.Model.get_absolute_url"><tt class="xref py py-meth docutils literal"><span class="pre">get_absolute_url()</span></tt></a> method will be called
to figure out the redirect URL:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">redirect</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="nb">object</span> <span class="o">=</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">...</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="nb">object</span><span class="p">)</span>
</pre></div>
</div>
</li>
<li><p class="first">By passing the name of a view and optionally some positional or
keyword arguments; the URL will be reverse resolved using the
<a class="reference internal" href="../../ref/urlresolvers.1#django.core.urlresolvers.reverse" title="django.core.urlresolvers.reverse"><tt class="xref py py-func docutils literal"><span class="pre">reverse()</span></tt></a> method:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;some-view-name&#39;</span><span class="p">,</span> <span class="n">foo</span><span class="o">=</span><span class="s">&#39;bar&#39;</span><span class="p">)</span>
</pre></div>
</div>
</li>
<li><p class="first">By passing a hardcoded URL to redirect to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;/some/url/&#39;</span><span class="p">)</span>
</pre></div>
</div>
<p>This also works with full URLs:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="s">&#39;http://example.com/&#39;</span><span class="p">)</span>
</pre></div>
</div>
</li>
</ol>
<p>By default, <a class="reference internal" href="shortcuts.1#django.shortcuts.redirect" title="django.shortcuts.redirect"><tt class="xref py py-func docutils literal"><span class="pre">redirect()</span></tt></a> returns a temporary redirect. All of the above
forms accept a <tt class="docutils literal"><span class="pre">permanent</span></tt> argument; if set to <tt class="docutils literal"><span class="pre">True</span></tt> a permanent redirect
will be returned:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="o">...</span>
    <span class="nb">object</span> <span class="o">=</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="o">...</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">redirect</span><span class="p">(</span><span class="nb">object</span><span class="p">,</span> <span class="n">permanent</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="s-get-object-or-404">
<span id="get-object-or-404"></span><h2><tt class="docutils literal"><span class="pre">get_object_or_404</span></tt><a class="headerlink" href="shortcuts.1#get-object-or-404" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.get_object_or_404">
<tt class="descname">get_object_or_404</tt>(<em>klass</em>, <em>*args</em>, <em>**kwargs</em>)<a class="headerlink" href="shortcuts.1#django.shortcuts.get_object_or_404" title="Permalink to this definition">¶</a></dt>
<dd><p>Calls <a class="reference internal" href="../../ref/models/querysets/index.html#django.db.models.query.QuerySet.get" title="django.db.models.query.QuerySet.get"><tt class="xref py py-meth docutils literal"><span class="pre">get()</span></tt></a> on a given model manager,
but it raises <a class="reference internal" href="views/index.html#django.http.Http404" title="django.http.Http404"><tt class="xref py py-class docutils literal"><span class="pre">Http404</span></tt></a> instead of the model&#8217;s
<a class="reference internal" href="../../ref/exceptions.1#django.core.exceptions.DoesNotExist" title="django.core.exceptions.DoesNotExist"><tt class="xref py py-class docutils literal"><span class="pre">DoesNotExist</span></tt></a> exception.</p>
</dd></dl>

<div class="section" id="s-id4">
<span id="id4"></span><h3>Required arguments<a class="headerlink" href="shortcuts.1#id4" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">klass</span></tt></dt>
<dd>A <a class="reference internal" href="../../ref/models/instances/index.html#django.db.models.Model" title="django.db.models.Model"><tt class="xref py py-class docutils literal"><span class="pre">Model</span></tt></a>, <a class="reference internal" href="../db/managers/index.html#django.db.models.Manager" title="django.db.models.Manager"><tt class="xref py py-class docutils literal"><span class="pre">Manager</span></tt></a> or
<a class="reference internal" href="../../ref/models/querysets/index.html#django.db.models.query.QuerySet" title="django.db.models.query.QuerySet"><tt class="xref py py-class docutils literal"><span class="pre">QuerySet</span></tt></a> instance from which to get the
object.</dd>
<dt><tt class="docutils literal"><span class="pre">**kwargs</span></tt></dt>
<dd>Lookup parameters, which should be in the format accepted by <tt class="docutils literal"><span class="pre">get()</span></tt> and
<tt class="docutils literal"><span class="pre">filter()</span></tt>.</dd>
</dl>
</div>
<div class="section" id="s-id5">
<span id="id5"></span><h3>Example<a class="headerlink" href="shortcuts.1#id5" title="Permalink to this headline">¶</a></h3>
<p>The following example gets the object with the primary key of 1 from
<tt class="docutils literal"><span class="pre">MyModel</span></tt>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">get_object_or_404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="n">my_object</span> <span class="o">=</span> <span class="n">get_object_or_404</span><span class="p">(</span><span class="n">MyModel</span><span class="p">,</span> <span class="n">pk</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</pre></div>
</div>
<p>This example is equivalent to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">Http404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="n">my_object</span> <span class="o">=</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">pk</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">except</span> <span class="n">MyModel</span><span class="o">.</span><span class="n">DoesNotExist</span><span class="p">:</span>
        <span class="k">raise</span> <span class="n">Http404</span>
</pre></div>
</div>
<p>Note: As with <tt class="docutils literal"><span class="pre">get()</span></tt>, a
<a class="reference internal" href="../../ref/exceptions.1#django.core.exceptions.MultipleObjectsReturned" title="django.core.exceptions.MultipleObjectsReturned"><tt class="xref py py-class docutils literal"><span class="pre">MultipleObjectsReturned</span></tt></a> exception
will be raised if more than one object is found.</p>
</div>
</div>
<div class="section" id="s-get-list-or-404">
<span id="get-list-or-404"></span><h2><tt class="docutils literal"><span class="pre">get_list_or_404</span></tt><a class="headerlink" href="shortcuts.1#get-list-or-404" title="Permalink to this headline">¶</a></h2>
<dl class="function">
<dt id="django.shortcuts.get_list_or_404">
<tt class="descname">get_list_or_404</tt>(<em>klass</em>, <em>*args</em>, <em>**kwargs</em>)<a class="headerlink" href="shortcuts.1#django.shortcuts.get_list_or_404" title="Permalink to this definition">¶</a></dt>
<dd><p>Returns the result of <a class="reference internal" href="../../ref/models/querysets/index.html#django.db.models.query.QuerySet.filter" title="django.db.models.query.QuerySet.filter"><tt class="xref py py-meth docutils literal"><span class="pre">filter()</span></tt></a> on a
given model manager cast to a list, raising <a class="reference internal" href="views/index.html#django.http.Http404" title="django.http.Http404"><tt class="xref py py-class docutils literal"><span class="pre">Http404</span></tt></a> if
the resulting list is empty.</p>
</dd></dl>

<div class="section" id="s-id6">
<span id="id6"></span><h3>Required arguments<a class="headerlink" href="shortcuts.1#id6" title="Permalink to this headline">¶</a></h3>
<dl class="docutils">
<dt><tt class="docutils literal"><span class="pre">klass</span></tt></dt>
<dd>A <a class="reference internal" href="../../ref/models/instances/index.html#django.db.models.Model" title="django.db.models.Model"><tt class="xref py py-class docutils literal"><span class="pre">Model</span></tt></a>, <a class="reference internal" href="../db/managers/index.html#django.db.models.Manager" title="django.db.models.Manager"><tt class="xref py py-class docutils literal"><span class="pre">Manager</span></tt></a> or
<a class="reference internal" href="../../ref/models/querysets/index.html#django.db.models.query.QuerySet" title="django.db.models.query.QuerySet"><tt class="xref py py-class docutils literal"><span class="pre">QuerySet</span></tt></a> instance from which to get the
list.</dd>
<dt><tt class="docutils literal"><span class="pre">**kwargs</span></tt></dt>
<dd>Lookup parameters, which should be in the format accepted by <tt class="docutils literal"><span class="pre">get()</span></tt> and
<tt class="docutils literal"><span class="pre">filter()</span></tt>.</dd>
</dl>
</div>
<div class="section" id="s-id7">
<span id="id7"></span><h3>Example<a class="headerlink" href="shortcuts.1#id7" title="Permalink to this headline">¶</a></h3>
<p>The following example gets all published objects from <tt class="docutils literal"><span class="pre">MyModel</span></tt>:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.shortcuts</span> <span class="kn">import</span> <span class="n">get_list_or_404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="n">my_objects</span> <span class="o">=</span> <span class="n">get_list_or_404</span><span class="p">(</span><span class="n">MyModel</span><span class="p">,</span> <span class="n">published</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</pre></div>
</div>
<p>This example is equivalent to:</p>
<div class="highlight-python"><div class="highlight"><pre><span class="kn">from</span> <span class="nn">django.http</span> <span class="kn">import</span> <span class="n">Http404</span>

<span class="k">def</span> <span class="nf">my_view</span><span class="p">(</span><span class="n">request</span><span class="p">):</span>
    <span class="n">my_objects</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">MyModel</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">filter</span><span class="p">(</span><span class="n">published</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">my_objects</span><span class="p">:</span>
        <span class="k">raise</span> <span class="n">Http404</span>
</pre></div>
</div>
</div>
</div>
</div>


<div class="browse-horizontal">
  
    <div class="left"><a href="file-uploads/index.html">&laquo; File Uploads</a></div>
  
  
    <div class="right"><a href="generic-views/index.html">Generic views &raquo;</a></div>
  
</div>
<div id="content-secondary">
  <h2 id="comments">Questions/Feedback</h2>
  <p>Having trouble? We'd like to help!</p>
  <ul>
    <li>
      
      Try the <a href="../../faq/index.html">FAQ</a> — it's got answers to many common questions.
    </li>
    <li>
      Search for information in the <a
      href="http://groups.google.com/group/django-users/">archives of the
      django-users mailing list</a>, or <a
      href="http://groups.google.com/group/django-users/">post a question</a>.
    </li>
    <li>
      Ask a question in the <a href="irc://irc.freenode.net/">#django IRC
      channel</a>, or search the <a href="http://django-irc-logs.com/">IRC
      logs</a> to see if it has been asked before.
    </li>
    <li>
      If you notice errors with this documentation, please <a
      href="https://code.djangoproject.com/newticket?component=Documentation">
      open a ticket</a> and let us know! Please only use the ticket tracker for
      criticisms and improvements on the docs. For tech support, use the
      resources above.
    </li>
  </ul>
</div>

		</div>
		<!-- END #content-main -->
		<div id="content-related" class="sidebar">
		
  
    <h2>Search</h2>
    
    

<form action="https://docs.djangoproject.com/search/" id="sidebar_search" class="search">
  <div>
    <p>
      <input id="id_sidebar_search_q" name="q" type="search" />
    </p>
    <p>
      <label for="id_sidebar_search_release">Version:</label>
      <select id="id_sidebar_search_release" name="release">
<option value="2">Django 1.0</option>
<option value="3">Django 1.1</option>
<option value="4">Django 1.2</option>
<option value="5">Django 1.3</option>
<option value="6">Django 1.4</option>
<option value="7" selected="selected">Django 1.5</option>
<option value="9">Django 1.6</option>
<option value="1">Development trunk</option>
</select>
    </p>
    <p>
      <input type="submit" class="submit" value="Search" />
    </p>
  </div>
</form>

  

  
    <h2>Contents</h2>
    
      <ul>
<li><a class="reference internal" href="shortcuts.1#">Django shortcut functions</a><ul>
<li><a class="reference internal" href="shortcuts.1#render"><tt class="docutils literal"><span class="pre">render</span></tt></a><ul>
<li><a class="reference internal" href="shortcuts.1#required-arguments">Required arguments</a></li>
<li><a class="reference internal" href="shortcuts.1#optional-arguments">Optional arguments</a></li>
<li><a class="reference internal" href="shortcuts.1#example">Example</a></li>
</ul>
</li>
<li><a class="reference internal" href="shortcuts.1#render-to-response"><tt class="docutils literal"><span class="pre">render_to_response</span></tt></a><ul>
<li><a class="reference internal" href="shortcuts.1#id1">Required arguments</a></li>
<li><a class="reference internal" href="shortcuts.1#id2">Optional arguments</a></li>
<li><a class="reference internal" href="shortcuts.1#id3">Example</a></li>
</ul>
</li>
<li><a class="reference internal" href="shortcuts.1#redirect"><tt class="docutils literal"><span class="pre">redirect</span></tt></a><ul>
<li><a class="reference internal" href="shortcuts.1#examples">Examples</a></li>
</ul>
</li>
<li><a class="reference internal" href="shortcuts.1#get-object-or-404"><tt class="docutils literal"><span class="pre">get_object_or_404</span></tt></a><ul>
<li><a class="reference internal" href="shortcuts.1#id4">Required arguments</a></li>
<li><a class="reference internal" href="shortcuts.1#id5">Example</a></li>
</ul>
</li>
<li><a class="reference internal" href="shortcuts.1#get-list-or-404"><tt class="docutils literal"><span class="pre">get_list_or_404</span></tt></a><ul>
<li><a class="reference internal" href="shortcuts.1#id6">Required arguments</a></li>
<li><a class="reference internal" href="shortcuts.1#id7">Example</a></li>
</ul>
</li>
</ul>
</li>
</ul>

    
  
  
    <h2>Browse</h2>
    <ul>
      
        
          <li>Prev: <a href="file-uploads/index.html">File Uploads</a></li>
        
        
          <li>Next: <a href="generic-views/index.html">Generic views</a></li>
        
        <li><a href="../../contents/index.html">Table of contents</a></li>
        
          <li><a href="../../genindex/index.html">General Index</a></li>
        
          <li><a href="../../py-modindex/index.html">Python Module Index</a></li>
        
      
    </ul>
  

  
    <h2>You are here:</h2>
    <ul>
      
        <li>
          <a href="../../../../index.html">Django 1.5 documentation</a>
          
            <ul><li><a href="../index.html">Using Django</a>
          
            <ul><li><a href="index.html">Handling HTTP requests</a>
          
          <ul><li>Django shortcut functions</li></ul>
          </li></ul></li></ul>
        </li>
      
    </ul>

    
      <h2>Download:</h2>
      <p>
        Offline (Django 1.5):
        <a href="../../../../m/docs/django-docs-1.5-en.zip">HTML</a> |
        <a href="http://media.readthedocs.org/pdf/django/1.5.x/django.pdf">PDF</a> |
        <a href="http://media.readthedocs.org/epub/django/1.5.x/django.epub">ePub</a>
      <br>
      <span class="quiet">
        Provided by <a href="http://readthedocs.org/">Read the Docs</a>.
      </span>
      </p>
    
  

		</div>
		<!-- END #content-related -->

    </div>
    <!-- END #content -->
    <div id="footer">
      <p>&copy; 2005-2013
        <a href="https://www.djangoproject.com/foundation/"> Django Software
        Foundation</a> unless otherwise noted. Django is a
        <a href="https://www.djangoproject.com/trademarks/">registered
        trademark</a> of the Django Software Foundation.
        <a href="http://mediatemple.net/">Linux Web hosting</a> graciously
        provided by Media Temple.
      </p>
    </div>
    <!-- END #footer -->
  </div>
  <!-- END #container -->
  


  </body>
</html>
